FROM nginx:mainline-alpine

ENV COMPOSER_VERSION 1.4.2
ENV LANG en_US.utf8

# Install packages
RUN apk --no-cache add libressl2.5-libcrypto libressl2.5-libssl nodejs openssl su-exec wget --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ && \
    apk --no-cache add nodejs php7 php7-fpm php7-json php7-ldap php7-mbstring php7-mcrypt php7-oauth php7-pgsql php7-session php7-tokenizer php7-zip php7-zlib supervisor --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ && \
    apk --no-cache add php7-ctype php7-curl php7-dom php7-fileinfo php7-mysqli php7-openssl php7-pdo php7-pdo_pgsql php7-pdo_sqlite php7-phar php7-xdebug php7-xml php7-xmlwriter --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ && \
    apk --no-cache add php7-lzf php7-uuid --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ && \
    apk --no-cache add libpq postgresql-client --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/

# Configure xdebug
COPY xdebug.ini /etc/php7/conf.d/xdebug.ini

# Configure nginxc
COPY config/nginx.conf /etc/nginx/nginx.conf

# Configure PHP-FPM
COPY config/fpm-pool.conf /etc/php7/php-fpm.d/zzz_custom.conf
COPY config/php.ini /etc/php7/conf.d/zzz_custom.ini

COPY /ssh/config /root/.ssh/config
COPY /ssh/known_hosts /root/.ssh/known_hosts

# Configure supervisord
COPY config/supervisord.conf etc/supervisor/conf.d/supervisord.conf

# PHP scripts to simulate sending ldap and postgres queries
COPY ./ldap.php /var/connect.php
#COPY ./postgres.php /var/postgres.php

# Add application
RUN mkdir -p /var/www
WORKDIR /tmp

RUN apk --no-cache add git openssh-client make g++ --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ && \
    apk --no-cache add docker nodejs-current nodejs-current-npm  --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ && \
    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' > /etc/nsswitch.conf && \
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php -r "if (hash_file('SHA384', 'composer-setup.php') === '669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410') { \
               echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" && \
    php composer-setup.php && \
    php -r "unlink('composer-setup.php');" && \
	mv composer.phar /usr/local/bin/composer && \
    ln -s /var/www/artisan /usr/local/bin/artisan && \
	npm install -g bower

COPY docker-entrypoint.sh /

ENTRYPOINT ["/docker-entrypoint.sh"]

VOLUME ["/etc/nginx/logs", "/var/www"]

EXPOSE 80

CMD ["install"]
